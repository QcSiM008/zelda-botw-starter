{"version":3,"sources":["assets/triforce.svg","pages/Home.tsx","context/ItemsContext.ts","utils/matrix.ts","components/grid/Item.tsx","components/grid/Grid.tsx","utils/keyboard.ts","pages/Menu.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","points","_ref","svgRef","title","props","height","width","fill","x","y","viewBox","enableBackground","xmlSpace","ref","ForwardRef","forwardRef","Home","history","useHistory","className","onClick","push","ItemsContext","createContext","clickSelectedItem","setItemSelected","item","itemSelected","MatrixUtils","COLUMNS_NUMBER","getMatrixPositionFromIndex","index","Math","floor","getIndexFromMaxtrixPosition","matrixPosition","Item","name","icon","itemIndex","useContext","position","classNames","alt","src","Grid","items","map","KeyboardUtils","goUp","max","goBottom","min","goLeft","goRight","Menu","useState","Provider","value","App","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e64ff212.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", null, /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"74.75,50 25.25,50 50,10.015  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"50,89.984 0.5,89.984 25.25,50  \"\n}), /*#__PURE__*/React.createElement(\"polygon\", {\n  points: \"99.5,89.984 50,89.984 74.75,50  \"\n}));\n\nvar SvgTriforce = function SvgTriforce(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    height: \"100px\",\n    width: \"100px\",\n    fill: \"#000000\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 100 100\",\n    enableBackground: \"new 0 0 100 100\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgTriforce, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/triforce.51d61b62.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport { ReactComponent as Triforce } from '../assets/triforce.svg';\nimport { useHistory } from 'react-router-dom';\n\nconst Home = () => {\n  const history = useHistory();\n  const handleCLick = () => history.push('/menu');\n\n  return (\n    <h1\n      className=\"flex items-center font-bold text-5xl tracking-tight text-gray-900 home-title\"\n      onClick={handleCLick}\n    >\n      Zelda BOTW Starter\n      <Triforce className=\"ml-4 w-20 h-20 text-zelda-yellow fill-current\" />\n    </h1>\n  );\n};\n\nexport default Home;\n","import { createContext } from 'react';\nimport { IPosition } from '../utils/matrix';\n\nconst ItemsContext = createContext({\n  clickSelectedItem: () => null,\n  setItemSelected: (item: IPosition) => {},\n  itemSelected: { x: 0, y: 0 },\n});\n\nexport default ItemsContext;\n","export interface IPosition {\n  x: number;\n  y: number;\n}\n\nexport default class MatrixUtils {\n  static readonly COLUMNS_NUMBER = 5;\n\n  // Index to Matrix position method\n  static getMatrixPositionFromIndex = (index: number): IPosition => {\n    const rowIndex = Math.floor(index / MatrixUtils.COLUMNS_NUMBER);\n    const columnIndex = index % MatrixUtils.COLUMNS_NUMBER;\n    return { x: rowIndex, y: columnIndex };\n  };\n\n  // Matrix position to index method\n  static getIndexFromMaxtrixPosition = (matrixPosition: IPosition) => {\n    return matrixPosition.x * MatrixUtils.COLUMNS_NUMBER + matrixPosition.y;\n  };\n}\n","import React, { FC, useContext } from 'react';\nimport classNames from 'classnames/bind';\nimport ItemsContext from '../../context/ItemsContext';\nimport { ItemType } from '../../data/items.type';\nimport MatrixUtils from '../../utils/matrix';\n\nexport interface IItem extends ItemType {\n  itemIndex: number;\n}\n\nconst Item: FC<IItem> = ({ name, icon, itemIndex }) => {\n  const { setItemSelected, itemSelected } = useContext(ItemsContext);\n  const position = MatrixUtils.getMatrixPositionFromIndex(itemIndex);\n  const handleClick = () => setItemSelected(position);\n\n  return (\n    <div\n      className={classNames(\n        { 'shadow-yellow border-zelda-softYellow border-2': itemSelected === position },\n        'w-20 h-20 bg-black border border-zelda-softYellow',\n      )}\n    >\n      <img alt={name} src={icon} onClick={handleClick} />\n    </div>\n  );\n};\n\nexport default Item;\n","import React, { FC } from 'react';\nimport Item from './Item';\nimport { ItemType } from '../../data/items.type';\n\nexport interface IGrid {\n  items: ItemType[];\n}\n\nconst Grid: FC<IGrid> = ({ items }) => (\n  <div className=\"grid grid-cols-3 md:grid-cols-5 gap-6\">\n    {items.map((item, index) => (\n      <Item key={item.name} name={item.name} icon={item.icon} itemIndex={index} />\n    ))}\n  </div>\n);\n\nexport default Grid;\n","import MatrixUtils, { IPosition } from './matrix';\n\nexport default class KeyboardUtils {\n  // Keyboard navigation\n  static goUp = (position: IPosition): IPosition => ({\n    x: Math.max(position.x - 1, 0),\n    y: position.y,\n  });\n\n  static goBottom = (position: IPosition): IPosition => ({\n    x: Math.min(position.x + 1, MatrixUtils.COLUMNS_NUMBER),\n    y: position.y,\n  });\n\n  static goLeft = (position: IPosition): IPosition => ({\n    x: position.x,\n    y: Math.max(position.y - 1, 0),\n  });\n\n  static goRight = (position: IPosition): IPosition => ({\n    x: position.x,\n    y: Math.min(position.y + 1, MatrixUtils.COLUMNS_NUMBER),\n  });\n}\n","import React, { useState } from 'react';\nimport Grid from '../components/grid/Grid';\nimport ItemsContext from '../context/ItemsContext';\nimport KeyboardUtils from '../utils/keyboard';\nimport { IPosition } from '../utils/matrix';\n\nconst Menu = () => {\n  const [itemSelected, setItemSelected] = useState<IPosition>({ x: 0, y: 0 });\n\n  const clickSelectedItem = () => null;\n\n  const handleKeyPressed = (event: React.KeyboardEvent) => {\n    let newItemSelected = null;\n    if (event.key === 'ArrowUp') {\n      newItemSelected = KeyboardUtils.goUp(itemSelected);\n    } else if (event.key === 'ArrowDown') {\n      newItemSelected = newItemSelected = KeyboardUtils.goBottom(itemSelected);\n    } else if (event.key === 'ArrowLeft') {\n      newItemSelected = KeyboardUtils.goLeft(itemSelected);\n    } else if (event.key === 'ArrowRight') {\n      newItemSelected = KeyboardUtils.goRight(itemSelected);\n    }\n    if (newItemSelected) {\n      setItemSelected(newItemSelected);\n    }\n  };\n\n  return (\n    <ItemsContext.Provider value={{ itemSelected, setItemSelected, clickSelectedItem }}>\n      <div className=\"container mx-auto flex flex-col xl:flex-row bg-zelda-darkGreen\">\n        <div className=\"w-full xl:w-1/2\">\n          <Grid items={[]} />\n        </div>\n        <div className=\"w-full xl:w-1/2\"></div>\n      </div>\n    </ItemsContext.Provider>\n  );\n};\n\nexport default Menu;\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Home from './pages/Home';\r\nimport Menu from './pages/Menu';\r\n\r\nconst App = () => (\r\n  <div className=\"min-h-screen flex justify-center items-center\">\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/menu\">\r\n          <Menu />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === '[::1]' ||\r\n  // 127.0.0.0/8 are considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n            'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}